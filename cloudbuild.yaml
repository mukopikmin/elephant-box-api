steps:
  - name: gcr.io/cloud-builders/git
    dir: /git
    args:
      - clone
      - https://github.com/mukopikmin/refrii-api.git
      - .
    volumes:
      - name: git
        path: /git
  - name: gcr.io/cloud-builders/git
    entrypoint: sh
    dir: /git
    args:
      - -c
      - "git log --format=%B -n 1 $COMMIT_SHA > /git/message"
    volumes:
      - name: git
        path: /git
  - name: gcr.io/cloud-builders/git
    entrypoint: sh
    dir: /git
    args:
      - -c
      - "git show -s --format=%ct $COMMIT_SHA > /git/timestamp"
    volumes:
      - name: git
        path: /git
  - name: gcr.io/cloud-builders/docker
    args: 
      - build
      - -t
      - gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA
      - .
  - name: gcr.io/cloud-builders/docker
    args: 
      - push
      - gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA
  - name: gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA
    dir: /app
    entrypoint: sh
    args:
      - scripts/test_report.sh
      - before-build
    volumes:
      - name: git
        path: /git
  - name: gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA
    dir: /app
    args: 
      - bundle
      - exec
      - rake
      - spec
    volumes:
      - name: coverage
        path: /app/coverage
  - name: gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA
    entrypoint: sh
    dir: /app
    args:
      - scripts/test_report.sh
      - after-build
      - -t
      - simplecov
    env:
      - CC_TEST_REPORTER_ID=0bef4d157d44f20ce4fef62d2618e8e0b3bbc2d4c7ae9c862e1a83f461d3e64b
      - GIT_COMMIT_SHA=$COMMIT_SHA
      - GIT_BRANCH=$BRANCH_NAME
    volumes:
      - name: coverage
        path: /app/coverage
      - name: git
        path: /git
  - name: gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA
    args: 
      - bundle
      - exec
      - rake
      - rubocop
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - scripts/staging.sh
    env:
      - BRANCH_NAME=$BRANCH_NAME
      - SHORT_SHA=$SHORT_SHA
    volumes:
      - name: git
        path: /git
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - -c
      - 'if [ "$BRANCH_NAME" = "master" ] ; then gcloud kms decrypt --ciphertext-file=credentials/credentials.staging.json.enc --plaintext-file=/kms/credentials.staging.json --location=global --keyring=$_KEY_RING --key=staging; fi'
    volumes:
      - name: kms
        path: /kms
  - name: gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA
    entrypoint: sh
    args:
      - -c
      - 'if [ "$BRANCH_NAME" = "master" ] ; then sh scripts/migrate.sh staging; fi'
    volumes:
      - name: kms
        path: /kms
    env:
      - RAILS_ENV=production
      - RACK_ENV=production
      - MYSQL_SOCKET=$_MYSQL_SOCKET
      - MYSQL_DATABASE=$_MYSQL_DATABASE
      - MYSQL_USERNAME=$_MYSQL_USERNAME
      - MYSQL_PASSWORD=$_MYSQL_PASSWORD
      - SECRET_KEY_BASE=$_SECRET_KEY_BASE
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: sh
    args:
      - -c
      - 'if [ "$BRANCH_NAME" = "master" ] ; then sh scripts/deploy.sh $_CLOUD_RUN_SERVICE gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA; fi'
    env:
      - RAILS_ENV=production
      - RACK_ENV=production
      - RELEASE_HASH=$COMMIT_SHA
images:
  - gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA
  
