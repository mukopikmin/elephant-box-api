steps:
  - name: gcr.io/cloud-builders/docker
    args:
      - pull
      - gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA
  - name: gcr.io/cloud-builders/docker
    args:
      - tag
      - gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA
      - gcr.io/$PROJECT_ID/$REPO_NAME:$TAG_NAME
  - name: gcr.io/cloud-builders/gcloud
    args:
      - kms
      - decrypt
      - --ciphertext-file=credentials/credentials.${_ENVIRONMENT}.json.enc
      - --plaintext-file=/kms/credentials.${_ENVIRONMENT}.json
      - --location=global
      - --keyring=$_KEY_RING
      - --key=$_ENVIRONMENT
    volumes:
      - name: kms
        path: /kms
  - name: gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA
    entrypoint: sh
    args:
      - scripts/migrate.sh
      - $_ENVIRONMENT
    volumes:
      - name: kms
        path: /kms
    env:
      - RAILS_ENV=production
      - RACK_ENV=production
      - MYSQL_SOCKET=$_MYSQL_SOCKET
      - MYSQL_DATABASE=$_MYSQL_DATABASE
      - MYSQL_USERNAME=$_MYSQL_USERNAME
      - MYSQL_PASSWORD=$_MYSQL_PASSWORD
      - SECRET_KEY_BASE=$_SECRET_KEY_BASE
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: sh
    args: 
      - scripts/deploy.sh
      - $_CLOUD_RUN_SERVICE
      - gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA
    env:
      - RAILS_ENV=production
      - RACK_ENV=production
      - RELEASE_TAG=$TAG_NAME
      - RELEASE_HASH=$COMMIT_SHA
images:
  - gcr.io/$PROJECT_ID/$REPO_NAME:$TAG_NAME
